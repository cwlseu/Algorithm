## Kruskal最小生成树算法
该算法中包含对边的排序，时间复杂度为O(ElogE)，在E条边中找出V-1条边的时间复杂度为O(ElogV)所以该算法的时间复杂度为O(ElogE+ElogV)。通常情况下E比V大得多，所以最后的时间复杂度为O(ElogE)

## Prim 算法

* 从任意一个顶点开发构造生成树，假设从1号顶点开始。首先将顶点1加入生成树中，用一个一维数组book来标记那些顶点已经加入了生成树
* 用数组dist记录生成树到各个顶点的距离。最初生成树中只有1号顶点。有直连边的时候，dist存储的就是一号顶点到该点的权值，没有直连边的时候为Infinity
* 从数组dist中选出离生成树最近的点（假设该点为j），加入到生成树中。再以j为中间点，更新生成树到每一个非树顶点的距离。即dist[k] > e[j][k] 更新 dist[k] = e[j][k]
* 重复第三步，知道所有的节点被加入为止
